document := (stmt newline newline+)* stmt? newline* EOF
stmt := expr_or_close (newline expr_or_close)*
expr_or_close := bracket_close | expr
escaped := backslash (dot | comma | bracket_open | bracket_close | backslash | .)
expr := (escaped | module | ident | bracket | dot | comma | whitespace | text)+
bracket := angle | curly | square
angle := angle_bracket_open (expr | newline)* angle_bracket_close?
curly := curly_bracket_open (expr | newline)* curly_bracket_close?
square := square_bracket_open (expr | newline)* square_bracket_close?
angle_bracket_open := "<"
angle_bracket_close := ">"
square_bracket_open := "["
square_bracket_close := "]"
curly_bracket_open := "{"
curly_bracket_close := "}"
module := text
ident := text
text := [^.]+
whitespace := " "
newline := "\n"
dot = "."
comma := ","
backslash := "\"
